# MongoDB
MONGO_URI=

# JWT
JWT_SECRET=

# Email Configuration (Gmail example)
EMAIL_USER=jadhavsanyog9@gmail.com
EMAIL_PASSWORD=ycvkersjarlkhxfq

# Twilio Configuration for Voice Calls
TWILIO_ACCOUNT_SID=AC5af1656c875e3d03be6ba45f078b537e
TWILIO_AUTH_TOKEN=144b3b0f18933082f24cfd748adba9a8
TWILIO_PHONE_NUMBER=+14474402787


//
# Cloudinary (optional)
CLOUDINARY_CLOUD_NAME=
CLOUDINARY_API_KEY=
CLOUDINARY_API_SECRET=

# Ethereum Sepolia RPC (Infura/Alchemy)
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/YOUR_INFURA_KEY

# Deployer private key (funded on Sepolia)
DEPLOYER_PRIVATE_KEY=0xYOUR_PRIVATE_KEY

# After deployment set the contract address
SBT_CONTRACT_ADDRESS=0x...

# --- Blockchain / Payment (test) settings ---
# RPC/Provider used by server-side verification (can be Sepolia/Goerli/testnet RPC URL from Alchemy/Infura/QuickNode)
ETH_PROVIDER_URL=https://sepolia.infura.io/v3/c4d40bc737df4966947b48ee5222350b

# On-chain address that will receive payments (use lower-case hex). If set, server will verify tx.to === PAYMENT_ADDRESS
PAYMENT_ADDRESS=0x356073f191538B277127A23Aa27C640F4848062e

# Public client-side mirror of payment address (used by frontend to pre-fill recipient)
NEXT_PUBLIC_PAYMENT_ADDRESS=0x356073f191538B277127A23Aa27C640F4848062e

# Conversion helper: how many INR equals 1 ETH (used on client to compute approximate ETH required for INR fees).
# For real usage replace with a live oracle or update periodically. Example: if 1 ETH == 200000 INR then set 200000
NEXT_PUBLIC_INR_PER_ETH=200000

# NOTE: For testing payments locally:
# - Use a testnet (Sepolia) account in MetaMask and fund it from a Sepolia faucet.
# - Set ETH_PROVIDER_URL to a working JSON-RPC endpoint (Infura/Alchemy/QuickNode).
# - Configure PAYMENT_ADDRESS / NEXT_PUBLIC_PAYMENT_ADDRESS to the recipient address you control on the same testnet.
# - Start backend and frontend. From the frontend registration page the client will send a MetaMask tx to PAYMENT_ADDRESS
#   and then post the resulting txHash to the server endpoints (/api/events/register/:id or /api/campaigns/donate/:id).
# - You can verify the receipt server-side by calling GET /api/blockchain/verify/:txHash which uses ETH_PROVIDER_URL.

# Server Configuration
PORT=4000

# OCR Configuration (optional)
ENABLE_OCR=true
